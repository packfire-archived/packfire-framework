<?php
namespace Packfire\Cache;

/**
 * Test class for MockCache.
 * Generated by PHPUnit on 2012-09-03 at 05:28:46.
 */
class MockCacheTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var \Packfire\Cache\MockCache
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new MockCache;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers \Packfire\Cache\MockCache::check
     */
    public function testCheck() {
        $this->assertFalse($this->object->check('test'));
        $this->object->set('test', 5, 3600);
        $this->assertTrue($this->object->check('test'));
    }

    /**
     * @covers \Packfire\Cache\MockCache::clear
     */
    public function testClear() {
        $this->object->set('test', 5, 3600);
        $this->assertTrue($this->object->check('test'));
        $this->object->clear('test');
        $this->assertFalse($this->object->check('test'));
    }

    /**
     * @covers \Packfire\Cache\MockCache::flush
     */
    public function testFlush() {
        $this->object->set('test', 5, 3600);
        $this->assertTrue($this->object->check('test'));
        $this->object->flush();
        $this->assertFalse($this->object->check('test'));
    }

    /**
     * @covers \Packfire\Cache\MockCache::garbageCollect
     */
    public function testGarbageCollect() {
        $this->assertTrue(method_exists($this->object, 'garbageCollect'));
    }

    /**
     * @covers \Packfire\Cache\MockCache::get
     */
    public function testGet() {
        $this->assertNull($this->object->get('test'));
        $this->assertEquals(10, $this->object->get('test', 10));
        $this->object->set('test', 5, 3600);
        $this->assertEquals(5, $this->object->get('test'));
        $this->assertEquals(5, $this->object->get('test', 10));
    }

}
