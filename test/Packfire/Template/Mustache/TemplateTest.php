<?php

namespace Packfire\Template\Mustache;

/**
 * Test class for Template.
 * Generated by PHPUnit on 2012-06-28 at 01:19:53.
 */
class TemplateTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \Packfire\Template\Mustache\Template
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     * @covers \Packfire\Template\Mustache\Template::__construct
     */
    protected function setUp()
    {
        $this->object = new Template('{{&html}} is making me {{#cond}}sick{{/cond}}{{^cond}}great{{/cond}}. {{#repeat}}My name is {{name}}. {{/repeat}}What is {{normal}}?');
        $this->object->fields()->add('html', '<b>John</b>');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers \Packfire\Template\Mustache\Template::fields
     */
    public function testFields()
    {
        $this->assertInstanceOf('Packfire\Collection\Map', $this->object->fields());
        $this->assertCount(1, $this->object->fields());
    }

    /**
     * @covers \Packfire\Template\Mustache\Template::parse
     */
    public function testParse2()
    {
        $this->assertEquals('<b>John</b> is making me great. What is ?', $this->object->parse());
    }

    /**
     * @covers \Packfire\Template\Mustache\Template::__toString
     */
    public function testToString()
    {
        $this->assertEquals('<b>John</b> is making me great. What is ?', $this->object);
    }

    /**
     * @covers \Packfire\Template\Mustache\Template::parse
     * @covers \Packfire\Template\Mustache\Template::set
     */
    public function testParse()
    {
        $this->object->set(
            array(
                'html' => '<b>John</b>',
                'cond' => true,
                'repeat' => array(
                    array('name' => 'Julia', 'age' => 50),
                    array('name' => 'Sofia', 'age' => 10),
                    array('name' => 'Jackie', 'age' => 40)
                ),
                'normal' => '<i>apple</i>'
            )
        );
        $this->assertEquals('<b>John</b> is making me sick. My name is Julia. My name is Sofia. My name is Jackie. What is &lt;i&gt;apple&lt;/i&gt;?', $this->object->parse());
    }

    /**
     * @covers \Packfire\Template\Mustache\Template::parse
     * @covers \Packfire\Template\Mustache\Template::set
     */
    public function testParseObj()
    {
        $this->object->set(
            (object) array(
                'html' => '<b>John</b>',
                'cond' => true,
                'repeat' => array(
                    array('name' => 'Julia', 'age' => 50),
                    array('name' => 'Sofia', 'age' => 10),
                    array('name' => 'Jackie', 'age' => 40)
                ),
                'normal' => '<i>apple</i>'
            )
        );
        $this->assertEquals('<b>John</b> is making me sick. My name is Julia. My name is Sofia. My name is Jackie. What is &lt;i&gt;apple&lt;/i&gt;?', $this->object->parse());
    }
}
