<?php
namespace Packfire\Welcome;

use Packfire\Application\Http\Response;
use Packfire\Session\Session;
use Packfire\Route\Http\Route;
use Packfire\Route\Http\Router;
use Packfire\Collection\Map;
require_once('test/Mocks/SessionStorage.php');
use Packfire\Test\Mocks\SessionStorage;

/**
 * Test class for HomeController.
 * Generated by PHPUnit on 2012-09-09 at 02:29:53.
 */
class HomeControllerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var HomeController
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new HomeController(null, new Response());
        
        $storage = new SessionStorage();
        $bucket->put('session.storage', $storage);
        $bucket->put('session', new Session($storage));
        $router = new Router();
        $config = new Map(array('rewrite' => 'home/{theme}', 'actual' => 'Rest'));
        $router->add('home', new Route('route.home', $config));
        $router->add('themeSwitch', new Route('route.home', $config));
        $bucket->put('router', $router);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @covers HomeController::message
     */
    public function testMessage() {
        $this->object->message();
        $this->assertTrue(array_key_exists('title', $this->object->state()));
        $this->assertTrue(array_key_exists('message', $this->object->state()));
    }

    /**
     * @covers HomeController::getIndex
     */
    public function testGetIndex() {
        $this->object->getIndex();
        $this->assertInstanceOf('Packfire\Application\Http\Response', $this->object->response());
        $this->assertEquals('<!DOCTYPE html>', substr($this->object->response()->body(),0,15));
    }

    /**
     * @covers HomeController::cliIndex
     */
    public function testCliIndex() {
        ob_start();
        $this->object->cliIndex();
        $contents = ob_get_contents();
        $this->assertNotEmpty($contents);
        ob_end_clean();
    }

}