<?php
namespace Packfire\Linq\Query;

/**
 * Test class for OrderBy.
 * Generated by PHPUnit on 2012-09-18 at 03:48:38.
 */
class OrderByTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var array
     */
    protected $data;

    /**
     * @var \Packfire\Linq\Query\OrderBy
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->data = array(
            array('name' => 'Roger', 'age' => 5),
            array('name' => 'Sofia', 'age' => 17),
            array('name' => 'Raine', 'age' => 8),
            array('name' => 'Sky', 'age' => 2),
            array('name' => 'Barr', 'age' => 6)
        );
        $this->object = new OrderBy(function($item) {
                            return $item['name'];
                        });
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }
    
    public function testDescending(){
        $this->object = new OrderBy(function($item) {
                            return $item['name'];
                        }, true);
        $result = $this->object->run($this->data);
        $this->assertEquals('Sofia', $result[0]['name']);
        $this->assertEquals('Sky', $result[1]['name']);
    }

    /**
     * @covers \Packfire\Linq\Query\OrderBy::run
     */
    public function testRun() {
        $result = $this->object->run($this->data);
        $this->assertEquals(
                array(
            array('name' => 'Barr', 'age' => 6),
            array('name' => 'Raine', 'age' => 8),
            array('name' => 'Roger', 'age' => 5),
            array('name' => 'Sky', 'age' => 2),
            array('name' => 'Sofia', 'age' => 17)
                )
                , $result);
    }

    /**
     * @covers \Packfire\Linq\Query\OrderBy::compare
     */
    public function testCompare() {
        $this->assertEquals(-1, $this->object->compare($this->data[0], $this->data[1]));
        $this->assertEquals(0, $this->object->compare($this->data[1], $this->data[1]));
        $this->assertEquals(1, $this->object->compare($this->data[3], $this->data[4]));
    }

}
