<?php
namespace Packfire\Collection;

use Packfire\Collection\Sort\IComparator;

/**
 * Test class for SortedList.
 * Generated by PHPUnit on 2012-04-07 at 08:29:11.
 */
class SortedListTest extends \PHPUnit_Framework_TestCase implements IComparator {

    /**
     * @var SortedList
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    public function compare($a, $b){
        if($a == $b){return 0;}
        return $a < $b ? -1 : 1;
    }

    public function testOne(){
        $this->object = new SortedList(function($a, $b){
                if($a == $b){return 0;}
                return $a < $b ? -1 : 1;
            });
        $this->runner();
    }

    public function testTwo(){
        $this->object = new SortedList(array($this, 'compare'));
        $this->runner();
    }

    public function testThree(){
        $this->object = new SortedList($this);
        $this->runner();
    }

    /**
     * @covers SortedList::add
     */
    protected function runner() {
        $this->object->add(5);
        $this->object->add(6);
        $this->object->add(2);
        $this->object->add(8);
        $this->object->add(4);
        $this->object->add(7);
        $this->object->add(5);

        $this->assertCount(7, $this->object);
        $this->assertEquals(array(2, 4, 5, 5, 6, 7, 8), $this->object->toArray());
    }

}