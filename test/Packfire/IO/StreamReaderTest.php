<?php

namespace Packfire\IO;

use Packfire\Text\TextStream;

/**
 * Test class for StreamReader.
 * Generated by PHPUnit on 2012-06-12 at 23:58:36.
 */
class StreamReaderTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \Packfire\IO\StreamReader
     */
    protected $object;

    /**
     *
     * @var \Packfire\Text\TextStream
     */
    protected $stream;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $data = <<<EOT
Mauris sed sem sit amet enim scelerisque facilisis. Aliquam erat volutpat. Integer cursus condimentum mauris eu ullamcorper. Aliquam vel dolor in magna luctus tincidunt. Proin leo arcu, vulputate eget varius vel, sodales sed augue. In et vehicula sem. Nullam ut metus quam.

Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Donec non lectus urna. Morbi adipiscing diam et lectus sollicitudin eget mattis ligula convallis. Nullam laoreet, tortor in bibendum egestas, mauris metus interdum nisi, et euismod nulla nulla sit amet leo. Sed sit amet purus eu turpis ultrices fermentum. Suspendisse potenti. Cras eget lectus sem, nec mollis urna. Donec luctus fringilla est id luctus.

Integer mollis sapien ac nisl vulputate sit amet commodo mauris consectetur. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Vestibulum semper ante at felis pharetra tristique vestibulum odio congue. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed rhoncus ligula ac nunc mollis dictum. Praesent erat tortor, accumsan nec lobortis sit amet, auctor quis mauris. Pellentesque sagittis ultricies libero vel placerat. Duis eu tempus risus.

Integer vulputate rutrum tellus, non ultrices orci tempor a. In lacus magna, tempus quis fermentum non, pellentesque non diam. Ut molestie pharetra condimentum. In vestibulum mi vel nunc varius ultricies. Vestibulum placerat, nibh nec elementum fringilla, magna velit pulvinar mi, ut elementum velit tellus id lorem. Donec ac tortor quam. Donec sit amet auctor nunc. Sed at mauris libero.
EOT;
        $this->stream = new TextStream($data);
        $this->object = new StreamReader($this->stream);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers \Packfire\IO\StreamReader::stream
     * @covers \Packfire\IO\StreamReader::__construct
     */
    public function testStream()
    {
        $this->assertInstanceOf('Packfire\IO\IStream', $this->object->stream());
        $this->assertEquals($this->stream, $this->object->stream());
    }

    /**
     * @covers \Packfire\IO\StreamReader::line
     */
    public function testLine()
    {
        $line = $this->object->line();
        $this->assertEquals('Mauris sed sem sit amet enim scelerisque facilisis. Aliquam erat volutpat. Integer cursus condimentum mauris eu ullamcorper. Aliquam vel dolor in magna luctus tincidunt. Proin leo arcu, vulputate eget varius vel, sodales sed augue. In et vehicula sem. Nullam ut metus quam.', trim($line));
        $line = $this->object->line();
        $this->assertEquals('', trim($line));
        $line = $this->object->line();
        $this->assertEquals('Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Donec non lectus urna. Morbi adipiscing diam et lectus sollicitudin eget mattis ligula convallis. Nullam laoreet, tortor in bibendum egestas, mauris metus interdum nisi, et euismod nulla nulla sit amet leo. Sed sit amet purus eu turpis ultrices fermentum. Suspendisse potenti. Cras eget lectus sem, nec mollis urna. Donec luctus fringilla est id luctus.', trim($line));
    }

    /**
     * @covers \Packfire\IO\StreamReader::until
     */
    public function testUntil()
    {
        $read = $this->object->until('enim');
        $this->assertEquals('Mauris sed sem sit amet enim', $read);
    }

    /**
     * @covers \Packfire\IO\StreamReader::until
     */
    public function testUntil2()
    {
        $read = $this->object->until('volutpat');
        $this->assertEquals('Mauris sed sem sit amet enim scelerisque facilisis. Aliquam erat volutpat', $read);
    }

    /**
     * @covers \Packfire\IO\StreamReader::until
     */
    public function testUntil3()
    {
        $this->stream->seek(0);
        $text = $this->stream->read($this->stream->length());
        $this->stream->seek(0);
        $read = $this->object->until('blah');
        $this->assertEquals($text, $read);
    }

    /**
     * @covers \Packfire\IO\StreamReader::until
     * @covers \Packfire\IO\StreamReader::strposa
     */
    public function testUntilArray()
    {
        $read = $this->object->until(array('erat', 'faci'));
        $this->assertEquals('Mauris sed sem sit amet enim scelerisque faci', $read);
    }

    /**
     * @covers \Packfire\IO\StreamReader::hasMore
     */
    public function testHasMore()
    {
        $read = $this->object->until('sem');
        $this->assertEquals('Mauris sed sem', $read);
        $this->assertTrue($this->object->hasMore());
    }

    /**
     * @covers \Packfire\IO\StreamReader::hasMore
     */
    public function testHasMore2()
    {
        $this->object->until('blah');
        $this->assertFalse($this->object->hasMore());
    }
}
