<?php

namespace Packfire\Core;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-13 at 06:21:16.
 */
class CallSequenceTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var \Packfire\Core\CallSequence
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new CallSequence;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    /**
     * @covers \Packfire\Core\CallSequence::__construct
     */
    public function testReference(){
        $property = new \ReflectionProperty($this->object, 'reference');
        $property->setAccessible(true);
        $this->assertInternalType('object', $property->getValue($this->object));
        $this->assertEquals($this->object->value(), $property->getValue($this->object));
    }

    /**
     * @covers \Packfire\Core\CallSequence::value
     */
    public function testValue() {
        $this->assertInternalType('object', $this->object->value());
    }

    /**
     * @covers \Packfire\Core\CallSequence::add
     */
    public function testAdd() {
        $property = new \ReflectionProperty(get_class($this->object), 'pipeline');
        $property->setAccessible(true);

        $this->object->add('trim', array($this->object->value()));
        $pipeline = $property->getValue($this->object);
        $this->assertEquals(array(array('trim', array($this->object->value()), true)), $pipeline);
    }

    /**
     * @covers \Packfire\Core\CallSequence::clear
     */
    public function testClear() {
        $property = new \ReflectionProperty(get_class($this->object), 'pipeline');
        $property->setAccessible(true);

        $this->object->add('trim', array($this->object->value()));
        $this->object->clear();
        $pipeline = $property->getValue($this->object);
        $this->assertEquals(array(), $pipeline);
    }

    /**
     * @covers \Packfire\Core\CallSequence::process
     */
    public function testProcess() {
        $test = null;
        $this->object->add('trim', array($this->object->value()));
        $this->object->add('strtoupper', array($this->object->value()));
        $this->object->add(function($text)use(&$test){
            $test = $text;;
        }, array($this->object->value()), false);

        $this->assertEquals('ALPHA', $this->object->process('  alpHA '));
        $this->assertEquals('ALPHA', $test);
    }

}
