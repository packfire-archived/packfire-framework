<?php

namespace Packfire\Core;

/**
 * Test class for ShutdownTaskManager.
 * Generated by PHPUnit on 2012-10-31 at 01:22:34.
 */
class ShutdownTaskManagerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var \Packfire\Core\ShutdownTaskManager
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new ShutdownTaskManager();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers \Packfire\Core\ShutdownTaskManager::add
     */
    public function testAdd() {
        $reflection = new \ReflectionProperty('Packfire\Core\ShutdownTaskManager', 'tasks');
        $reflection->setAccessible(true);
        $this->object->add('task', array($this, 'testAdd'));
        $value = $reflection->getValue($this->object);
        $this->assertInstanceOf('Packfire\Collection\Map', $value);
        $this->assertEquals(array('task' => array(array($this, 'testAdd'))), $value->toArray());
        $this->object->remove('task');
    }

    /**
     * @expectedException \Packfire\Exception\InvalidArgumentException
     * @covers \Packfire\Core\ShutdownTaskManager::add
     */
    public function testAddFail() {
        $reflection = new \ReflectionProperty('Packfire\Core\ShutdownTaskManager', 'tasks');
        $reflection->setAccessible(true);

        $this->object->add('task', null);
    }

    /**
     * @covers \Packfire\Core\ShutdownTaskManager::remove
     */
    public function testRemove() {
        $reflection = new \ReflectionProperty('Packfire\Core\ShutdownTaskManager', 'tasks');
        $reflection->setAccessible(true);
        $this->object->add('task', array($this, 'testAdd'));
        $this->object->remove('task');
        $value = $reflection->getValue($this->object);
        $this->assertInstanceOf('Packfire\Collection\Map', $value);
        $this->assertEquals(array(), $value->toArray());
    }

    /**
     * @covers \Packfire\Core\ShutdownTaskManager::doShutdown
     * @covers \Packfire\Core\ShutdownTaskManager::add
     */
    public function testDoShutdown() {
        $data = false;
        $this->object->add('task', function()use(&$data) {
                    $data = true;
                });
        $this->object->doShutdown();
        $this->assertTrue($data);
        $this->object->remove('task');
    }

    /**
     * @covers \Packfire\Core\ShutdownTaskManager::doShutdown
     * @covers \Packfire\Core\ShutdownTaskManager::add
     */
    public function testDoShutdown2() {
        $data = false;
        $this->object->add('task', function($value)use(&$data) {
            $data = $value;
        }, 5);
        $this->object->doShutdown();
        $this->assertEquals(5, $data);
        $this->object->remove('task');
    }

}