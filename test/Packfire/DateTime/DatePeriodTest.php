<?php
namespace Packfire\DateTime;

/**
 * Test class for DatePeriod.
 * Generated by PHPUnit on 2012-02-16 at 10:26:45.
 */
class DatePeriodTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \Packfire\DateTime\DatePeriod
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     * @covers \Packfire\DateTime\DatePeriod::__construct
     */
    protected function setUp()
    {
        $this->object = new DatePeriod(new DateTime(2012, 1, 10), new TimeSpan(2 * 86400), 5);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers \Packfire\DateTime\DatePeriod::occurrances
     */
    public function testOccurances()
    {
        $this->assertEquals(5, $this->object->occurrances());
    }

    /**
     * @covers \Packfire\DateTime\DatePeriod::key
     */
    public function testKey()
    {
        $this->assertEquals(0, $this->object->key());
        $this->object->next();
        $this->assertEquals(1, $this->object->key());
    }

    /**
     * @covers \Packfire\DateTime\DatePeriod
     */
    public function testRun()
    {
        $array = array();
        foreach ($this->object as $key => $date) {
            $array[$key] = $date;
        }
        $this->assertEquals(10, $array[0]->day());
        $this->assertEquals(1, $array[0]->month());
        $this->assertEquals(2012, $array[0]->year());
        $this->assertEquals(12, $array[1]->day());
        $this->assertEquals(1, $array[1]->month());
        $this->assertEquals(2012, $array[1]->year());
        $this->assertEquals(14, $array[2]->day());
        $this->assertEquals(1, $array[2]->month());
        $this->assertEquals(2012, $array[2]->year());
    }
}
