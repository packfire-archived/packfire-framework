<?php

pload('packfire.application.pCommandParser');

/**
 * Test class for pCommandParser.
 * Generated by PHPUnit on 2012-06-22 at 03:24:02.
 */
class pCommandParserTest extends PHPUnit_Framework_TestCase {

    /**
     * @var pCommandParser
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new pCommandParser(array(
            '-ab',
            'test',
            '--cat',
            'file',
            '-d=fetch',
            '/e=mail',
            '/fly=linus'
        ));
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers pCommandParser::result
     */
    public function testResult() {
        $this->assertInstanceOf('pMap', $this->object->result());
        $this->assertCount(7, $this->object->result());
    }

    /**
     * @covers pCommandParser::getValue
     */
    public function testGetValue() {
        $this->assertEquals(true, $this->object->getValue('a'));
        $this->assertEquals(true, $this->object->getValue('back', 'b'));
        $this->assertEquals('test', $this->object->getValue(1));
        $this->assertEquals('file', $this->object->getValue('cat'));
        $this->assertEquals('fetch', $this->object->getValue('dog', 'd'));
        $this->assertEquals('linus', $this->object->getValue('f', 'fly'));
    }

    /**
     * @covers pCommandParser::isFlagged
     */
    public function testIsFlagged() {
        $this->assertTrue($this->object->isFlagged('-a'));
        $this->assertTrue($this->object->isFlagged('-b'));
        $this->assertTrue($this->object->isFlagged('b'));
        $this->assertTrue($this->object->isFlagged('cat'));
        $this->assertTrue($this->object->isFlagged('d'));
        $this->assertTrue($this->object->isFlagged('/e'));
        $this->assertTrue($this->object->isFlagged('-fly'));
        $this->assertTrue($this->object->isFlagged('back', 'cat'));
        $this->assertFalse($this->object->isFlagged('z'));
        $this->assertFalse($this->object->isFlagged('z', 'ca'));
    }

}